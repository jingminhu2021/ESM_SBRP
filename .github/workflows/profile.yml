name: Build Images for profile #change title

on:
  pull_request:
    branches: ["*"]
    paths:
      - "profile/**" #change new_file to your dir path

  push:
    branches: [main, "**_staging"]
    paths:
      - "profile/**" #change new_file to your dir path

env:
  dir_path: "profile" #change new_file to your dir path
  repo_name: "is212_profile"

jobs:
  Pylint_Test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --no-cache-dir -r ${{env.dir_path}}/requirements.txt
          pip install pylint

      - name: Analysing the code with pylint
        run: |
          pylint -d C0114,C0116,C0304,C0301,C0303,C0103,C0115,W0718,R0903,R1735,R0902,R0913 --fail-under=7  $(git ls-files '${{env.dir_path}}/*.py')

  Unit_Test:
    needs: Pylint_Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --no-cache-dir -r ${{env.dir_path}}/requirements.txt
          pip install pytest flask_testing

      - name: Run integration tests
        run: |
          python -m unittest discover -s 'profile' -p '*test*'

  Docker_Image_Builder:
    needs: Unit_Test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build the Docker image for main
        if: github.ref == 'refs/heads/main'
        run: |
          docker build ${{env.dir_path}} --file ${{env.dir_path}}/Dockerfile --tag ${{secrets.DOCKER_USERNAME}}/${{env.repo_name}}:rc-${{ github.sha }} --tag ${{secrets.DOCKER_USERNAME}}/${{env.repo_name}}:rc-latest

      - name: Build the Docker image for staging
        if: startsWith(github.ref, 'refs/heads/') && endsWith(github.ref,'_staging')
        run: |
          docker build ${{env.dir_path}} --file ${{env.dir_path}}/Dockerfile --tag ${{secrets.DOCKER_USERNAME}}/${{env.repo_name}}:${{ github.sha }} --tag ${{secrets.DOCKER_USERNAME}}/${{env.repo_name}}:latest

      - name: Docker Push for main
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ${{secrets.DOCKER_USERNAME}}/${{env.repo_name}}:rc-${{ github.sha }}
          docker push ${{secrets.DOCKER_USERNAME}}/${{env.repo_name}}:rc-latest

      - name: Docker Push for staging
        if: startsWith(github.ref, 'refs/heads/') && endsWith(github.ref,'_staging')
        run: |
          docker push ${{secrets.DOCKER_USERNAME}}/${{env.repo_name}}:${{ github.sha }}
          docker push ${{secrets.DOCKER_USERNAME}}/${{env.repo_name}}:latest
